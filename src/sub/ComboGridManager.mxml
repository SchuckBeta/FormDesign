<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  width="847" height="503" creationComplete="init()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import components.InputField;
			import components.InputLabel;
			import components.STButton;
			import components.STCheckBox;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			import tags.Table;
			import tags.Td;
			import tags.Tr;
			private var loading:Loading = new Loading();
			public var formDesign:FormDesign;
			private var fieldXMLList:XMLListCollection;
			public var alignData: ArrayCollection = new ArrayCollection(  
				[  
					{label:"left"},    
					{label:"center"} ,
					{label:"right"}]);
			private var filedDataGridData:ArrayCollection = new ArrayCollection();
			
			private function init():void{
				titleWindow.addEventListener(CloseEvent.CLOSE, titleWindow_close);
				titleWindow.isPopUp = true;
				addEventListener(FlexEvent.UPDATE_COMPLETE,function():void{
					if(formDesign!=null){
						//customText.text =  t_Obj.value;
					}else{
						//customText.text = t_Obj.custom;
					}
				});
				initData();
				if(formDesign!=null){
					if(formDesign.focusObj is InputField){
						var inputField:InputField = formDesign.focusObj as  InputField;
						//inputField.comboGridIni = this.getXMLStr();	
						this.xml2list(new XML(inputField.comboGridIni));
					}
				}
			}
			//关闭弹出对话框
			private function titleWindow_close(event:CloseEvent=null):void { 
				PopUpManager.removePopUp(this); 
			} 
			protected function okBtn_clickHandler(event:MouseEvent):void
			{
				if(dataSource.selectedIndex ==-1){
					Alert.show("请选择数据源！");
					return;
				}
				if(selectvalue.selectedIndex ==-1){
					Alert.show("请选择选定值！");
					return;
				}
				/*if(selectlabel.selectedIndex ==-1){
					Alert.show("请选择选定显示值！");
					return;
				}
				*/
				if(formDesign!=null){
					if(formDesign.focusObj is InputField){
						var inputField:InputField = formDesign.focusObj as  InputField;
						inputField.comboGridIni = this.getXMLStr();	
					}
				}
				this.titleWindow_close(null);
			}
			
			
			protected function cancelBtn_clickHandler(event:MouseEvent):void
			{
				this.titleWindow_close(null);
			}
			public function initData():void{
				dataSource.dataProvider = formDesign.getDataSourceByArrayCollection();
				dataSource.labelField = "label";
				//dataSource.selectedIndex=-1;
				
			}

			protected function dataSource_changeHandler(event:IndexChangeEvent):void
			{
				
				if(dataSource.selectedItem!=null){
					try{
						fieldXMLList =  new XMLListCollection(new XMLList(formDesign.getFieldByXMLList(dataSource.selectedItem.data)+""));
						fieldList.dataProvider =fieldXMLList;
						fieldList.labelField="@name";
						selectvalue.dataProvider = new XMLListCollection(new XMLList(formDesign.getFieldByXMLList(dataSource.selectedItem.data)+""));
						selectvalue.labelField="@name";
						selectlabel.dataProvider = new XMLListCollection(new XMLList(formDesign.getFieldByXMLList(dataSource.selectedItem.data)+""));
						selectlabel.labelField="@name";
					}catch(e:*){
					}
				}	
			}

			protected function leftMove_clickHandler(event:MouseEvent):void
			{
				if(fieldList.selectedItems!=null && fieldList.selectedItems.length>0){
					for(var i:int=0;i<fieldList.selectedItems.length;i++){
						var selectedItem:Object =fieldList.selectedItems[i];
						filedDataGridData.addItem({row:filedDataGridData.length+1,field:selectedItem.@name,fieldName:"",width:"",align:"",custom:""});
					}
					
					for(var i:int=0;i<fieldList.selectedItems.length;i++){
						var selectedItem:Object =fieldList.selectedItems[i];
						for(var n:int=0;n<fieldList.dataProvider.length;n++){
							if(fieldList.dataProvider[n]==selectedItem){
								fieldList.dataProvider.removeItemAt(n);
								i--;
								break;
							}
						}
					}
					filedDataGrid.dataProvider = filedDataGridData;
				}
			}


			protected function leftMoveAll_clickHandler(event:MouseEvent):void
			{
				if(fieldList.dataProvider!=null && fieldList.dataProvider.length>0){
					for(var n:int=0;n<fieldList.dataProvider.length;n++){
						var selectedItem:Object =fieldList.dataProvider[n];
						filedDataGridData.addItem({row:filedDataGridData.length+1,field:selectedItem.@name,fieldName:"",width:"",align:"",custom:""});
						fieldList.dataProvider.removeItemAt(n);
						n--;
					}
					filedDataGrid.dataProvider = filedDataGridData;
				}
			}


			protected function rightMove_clickHandler(event:MouseEvent):void
			{
				if(filedDataGrid.selectedItems!=null && filedDataGrid.selectedItems.length>0){
					for(var i:int=0;i<filedDataGrid.selectedItems.length;i++){
						var selectedItem:Object =filedDataGrid.selectedItems[i];
						var xml:XML = XML("<field name='"+selectedItem.field+"'/>");
						fieldList.dataProvider.addItem(xml);
					}
					for(var i:int=0;i<filedDataGrid.selectedItems.length;i++){
						var selectedItem:Object =filedDataGrid.selectedItems[i];
						for(var n:int=0;n<filedDataGrid.dataProvider.length;n++){
							if(filedDataGrid.dataProvider[n]==selectedItem){
								filedDataGrid.dataProvider.removeItemAt(n);
								i--;
								break;
							}
						}
					}
				}
				
				this.setFiledDataGridRow();
			}


			protected function rightMoveAll_clickHandler(event:MouseEvent):void
			{
				
				if(filedDataGrid.dataProvider!=null && filedDataGrid.dataProvider.length>0){
					for(var n:int=0;n<filedDataGrid.dataProvider.length;n++){
						var selectedItem:Object =filedDataGrid.dataProvider[n];
						var xml:XML = XML("<field name='"+selectedItem.field+"'/>");
						fieldList.dataProvider.addItem(xml);
						filedDataGrid.dataProvider.removeItemAt(n);
						n--;
					}
				}
				this.setFiledDataGridRow();
			}
			public function setFiledDataGridRow():void{
				if(filedDataGrid.dataProvider!=null && filedDataGrid.dataProvider.length>0){
					for(var n:int=0;n<filedDataGrid.dataProvider.length;n++){
						filedDataGrid.dataProvider[n].row = n+1;
					}
				}
				
			}
			
			protected function upMoveBtn_clickHandler(event:MouseEvent):void
			{
				if(filedDataGrid.selectedIndex==0){
					return;
				}
				var selectedIndex:Number = filedDataGrid.selectedIndex;
				var selectedItem:Object = filedDataGrid.selectedItem;
				var vsp:Number = filedDataGrid.verticalScrollPosition;
				var dataArrTmp:ArrayCollection = new ArrayCollection();
				for(var i:int=0;i<filedDataGridData.length;i++){
					if(i+1==filedDataGrid.selectedIndex){
						dataArrTmp.addItem(filedDataGridData[i+1]);
					}else if(i==filedDataGrid.selectedIndex){
						dataArrTmp.addItem(filedDataGridData[i-1]);
					}else{
						dataArrTmp.addItem(filedDataGridData[i]);
					}
				}
				filedDataGridData  = dataArrTmp;
				//this.loadData();
				filedDataGrid.dataProvider = filedDataGridData;
				filedDataGrid.selectedItem=selectedItem;
				filedDataGrid.verticalScrollPosition  = vsp;
				this.setFiledDataGridRow();
			}
			
			
			protected function downMoveBtn_clickHandler(event:MouseEvent):void
			{
				
				if(filedDataGrid.selectedItem==null 
					|| filedDataGrid.selectedIndex==filedDataGridData.length-1){
					return;
				}
				var selectedIndex:Number = filedDataGrid.selectedIndex;
				var selectedItem:Object = filedDataGrid.selectedItem;
				var vsp:Number = filedDataGrid.verticalScrollPosition;
				var dataArrTmp:ArrayCollection = new ArrayCollection();
				for(var i:int=0;i<filedDataGridData.length;i++){
					if(i-1==filedDataGrid.selectedIndex){
						dataArrTmp.addItem(filedDataGridData[i-1]);
					}else if(i==filedDataGrid.selectedIndex){
						dataArrTmp.addItem(filedDataGridData[i+1]);
					}else{
						dataArrTmp.addItem(filedDataGridData[i]);
					}
				}
				filedDataGridData  = dataArrTmp;
				//this.loadData();
				filedDataGrid.dataProvider = filedDataGridData;
				filedDataGrid.selectedItem=selectedItem;
				filedDataGrid.verticalScrollPosition  = vsp;
				this.setFiledDataGridRow();
			}

			public function getXMLStr():String{
				this.setDataSourceText();
				dataSource.selectedItem = dataSource.dataProvider[dataSource.selectedIndex];
				var xmlStr:String  = "<viewField source='"+dataSource.selectedItem.data+"' selectvalue='"+selectvalue.selectedItem.@name+"' selectlabel='' >\n";
				
				if(filedDataGrid.dataProvider.length>0){
					for(var i:int=0;i<filedDataGrid.dataProvider.length;i++){
						var obj:Object = filedDataGrid.dataProvider[i];
						xmlStr+="	<field field='"+obj.field+"' fieldName='"+obj.fieldName+"' width='"+obj.width+"'  align='"+obj.align+"'>\n"
						//Alert.show(obj.text())
						if(obj.custom!=""){
							xmlStr+="		START_CDATA";
							xmlStr+=obj.custom;
							xmlStr+="		END_CDATA"
						}
						xmlStr+="	</field>\n";
					}
				}else if(fieldList.dataProvider.length>0){
					for(var i:int=0;i<fieldList.dataProvider.length;i++){
						var obj:Object = fieldList.dataProvider[i];
						xmlStr+="	<field field='"+obj.@name+"' fieldName='' width=''  align=''>\n";
						xmlStr+="	</field>\n";
					}
				}
				xmlStr += "</viewField>\n";
				
				//xmlStr = xmlStr.replace("START_CDATA", "<!\[CDATA\[").replace("END_CDATA", "\]\]>");
				return xmlStr;
			}
			public function xml2list(xml:XML ):void{
				if(xml!=null){
					
					this.setDataSourceText(xml.@source);
					this.dataSource_changeHandler(null);	
					this.setSelectvalueText(xml.@selectvalue);
					this.setSelectlabelText(xml.@selectlabel);
					filedDataGridData.removeAll();
					var children:XMLList = xml.children();
					for(var i:int=0;i<children.length();i++){
						var childrenXml:XML = children[i];
						var custom:String =  childrenXml.text();
						custom= custom.replace("START_CDATA","");
						custom= custom.replace("END_CDATA","");
						filedDataGridData.addItem({row:filedDataGridData.length+1,field:childrenXml.@field,fieldName:childrenXml.@fieldName,width:childrenXml.@width,align:childrenXml.@align,custom:custom});
						
					}
				}
				
				this.removeListExist();
			}
			//删除已经在列表存在的LIST值
			public function removeListExist():void{
				for(var i:int=0;i<filedDataGrid.dataProvider.length;i++){
					var obj:Object = filedDataGrid.dataProvider[i];
					for(var n:int=0;n<fieldList.dataProvider.length;n++){
						var objList:Object = fieldList.dataProvider[n];
						if(objList.@name==obj.field){
							fieldList.dataProvider.removeItemAt(n);
							break;
						}
					}
				}
			}
			public function addLoading():void{
				
				PopUpManager.addPopUp(loading,parentDocument.hdbox, true);
				PopUpManager.centerPopUp(loading); 
			}
			public function removeLoading():void{
				
				PopUpManager.removePopUp(loading);
			}
			public function setDataSourceText(text:String=null):void{
				if(text==null || ""==text){
					text = dataSource.textInput.text;
				}
				for(var i:int=0;i<dataSource.dataProvider.length;i++){
					var obj:Object = dataSource.dataProvider[i];
					if(obj.data==text ){
						dataSource.selectedItem = obj;
						dataSource.selectedIndex = i;
						break;
					}
				}
			}
			public function setSelectvalueText(text:String=null):void{
				if(selectvalue.dataProvider!=null){
					if(text==null || ""==text){
						text = selectvalue.textInput.text;
					}
					for(var i:int=0;i<selectvalue.dataProvider.length;i++){
						var obj:Object = selectvalue.dataProvider[i];
						if(obj.@name==text ){
							selectvalue.selectedItem = obj;
							selectvalue.selectedIndex = i;
							break;
						}
					}
				}
			}
			public function setSelectlabelText(text:String=null):void{
				if(selectlabel.dataProvider!=null){
					if(text==null || ""==text){
						text = selectlabel.textInput.text;
					}
					for(var i:int=0;i<selectlabel.dataProvider.length;i++){
						var obj:Object = selectlabel.dataProvider[i];
						if(obj.@name==text ){
							selectlabel.selectedItem = obj;
							selectlabel.selectedIndex = i;
							break;
						}
					}
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:TitleWindow x="-1" y="-2" width="847" height="503" title="ComboGrid" id ="titleWindow">
	<s:Label x="10" y="19" text="数据源："/>
	<s:ComboBox x="66" y="10" id="dataSource" change="dataSource_changeHandler(event)"/>
	
	<s:List x="10" y="42" height="85%" width="103" id="fieldList" allowMultipleSelection="true"></s:List>
	<mx:DataGrid x="165" y="41" width="80%" height="85%" 
				 editable="true"  allowMultipleSelection="true" sortableColumns="false" 
				 id="filedDataGrid"   >
		<mx:columns>
			<mx:DataGridColumn headerText="序号" 	dataField="row" width="40" editable="false" />
			<mx:DataGridColumn headerText="字段名" 	dataField="field" width="100" editable="false" />
			<mx:DataGridColumn headerText="显示名" 	dataField="fieldName"  width="110"  >
				<mx:itemEditor>
					<fx:Component>
						<mx:HBox>
							<fx:Script>
								<![CDATA[
									public function get text():Object{
										
										return textInputFieldName.text;
									}
									override public function set data(value:Object):void{
										textInputFieldName.text = value.fieldName;
										textInputFieldName.setFocus();
									}

									protected function textInputFieldName_focusInHandler(event:FocusEvent):void
									{
										IME.enabled=true;
									}

								]]>
								
							</fx:Script>
							<s:TextInput width="100%" id="textInputFieldName" focusIn="textInputFieldName_focusInHandler(event)"  maxChars="20"/>
						</mx:HBox>
					</fx:Component>
				</mx:itemEditor>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="列宽" 	dataField="width" width="50"  >
				<mx:itemEditor>
					<fx:Component>
						<mx:HBox>
							<fx:Script>
								<![CDATA[
									public function get text():Object{
										
										return textInputWidth.text;
									}
									override public function set data(value:Object):void{
										textInputWidth.text = value.width;
										textInputWidth.setFocus();
									}
								]]>
								
							</fx:Script>
							<s:TextInput width="100%" id="textInputWidth"  restrict="0-9/^" maxChars="3"/>
						</mx:HBox>
					</fx:Component>
				</mx:itemEditor>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="对齐方式" dataField="align" width="90" >
				<mx:itemEditor>
					<fx:Component>
						<mx:HBox>
							<fx:Script>
								<![CDATA[
									public function get text():Object{
										if(comboBox.selectedItem!=null){
											return comboBox.selectedItem.label;
										}
										return null;
									}
									override public function set data(value:Object):void{
										comboBox.selectedIndex=-1;
										for each(var iterm:Object in comboBox.dataProvider){
											if(iterm.label == value.align){
												comboBox.selectedItem = iterm;
											}
										}
									}										
								]]>
							</fx:Script>
							<mx:ComboBox id="comboBox" width="100%" dataProvider="{outerDocument.alignData}"/>
						</mx:HBox>
					</fx:Component>
				</mx:itemEditor>
			</mx:DataGridColumn>
		</mx:columns>
		<mx:dataProvider>
			{filedDataGridData}
		</mx:dataProvider>
	</mx:DataGrid>
	
	<s:Button x="119" y="116" label="&gt;" width="41" id="leftMove" click="leftMove_clickHandler(event)"/>
	<s:Button x="119" y="139" label="&gt;&gt;" width="41" id="leftMoveAll" click="leftMoveAll_clickHandler(event)"/>
	<s:Button x="119" y="177" label="&lt;" width="41" id="rightMove" click="rightMove_clickHandler(event)"/>
	<s:Button x="119" y="200" label="&lt;&lt;" width="41" id="rightMoveAll" click="rightMoveAll_clickHandler(event)"/>
	<s:Button x="167" bottom="5" label="上移" width="47" id="upMoveBtn"   click="upMoveBtn_clickHandler(event)"/>
	<s:Button x="217" bottom="5" label="下移" width="47" id="downMoveBtn"  click="downMoveBtn_clickHandler(event)"/>
	<s:Label x="230" y="19" text="选定值："/>
	<s:ComboBox x="286" y="10" id="selectvalue"/>
	<s:Label x="447" y="19" text="选定显示值：" visible="false"/>
	<s:ComboBox x="524" y="11" id="selectlabel" visible="false"/>
	<s:Button right="88" bottom="5" label="确定" width="47" id="okBtn"  click="okBtn_clickHandler(event)" />
	<s:Button x="765" y="444" label="取消" id="cancelBtn" click="cancelBtn_clickHandler(event)" width="47"/>
	</s:TitleWindow>
</s:Group>
